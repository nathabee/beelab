# Generated by Django 5.1.7 on 2025-08-28 15:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(upload_to='competence/icons/')),
            ],
        ),
        migrations.CreateModel(
            name='PDFLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_icon', models.ImageField(upload_to='competence/header_icons/')),
                ('schule_name', models.TextField(blank=True, null=True)),
                ('header_message', models.TextField(blank=True, null=True)),
                ('footer_message1', models.TextField(blank=True, null=True)),
                ('footer_message2', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Annee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('stop_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['is_active'], name='annee_active_idx'), models.Index(fields=['start_date'], name='annee_start_date_idx'), models.Index(fields=['stop_date'], name='annee_stop_date_idx')],
            },
        ),
        migrations.CreateModel(
            name='Etape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etape', models.CharField(max_length=10)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['etape'], name='etape_idx')],
            },
        ),
        migrations.CreateModel(
            name='Catalogue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('annee', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='competencecore.annee')),
                ('professeurs', models.ManyToManyField(blank=True, related_name='catalogues', to=settings.AUTH_USER_MODEL)),
                ('etape', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='competencecore.etape')),
            ],
        ),
        migrations.CreateModel(
            name='GroupageData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('desc_groupage', models.CharField(max_length=100)),
                ('label_groupage', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=500)),
                ('max_point', models.IntegerField()),
                ('seuil1', models.IntegerField()),
                ('seuil2', models.IntegerField()),
                ('max_item', models.IntegerField()),
                ('catalogue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competencecore.catalogue')),
                ('groupage_icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='competencecore.myimage')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temps', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('observation', models.TextField(blank=True, null=True)),
                ('max_score', models.FloatField()),
                ('itempos', models.IntegerField()),
                ('link', models.CharField(max_length=500)),
                ('groupagedata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competencecore.groupagedata')),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matiere', models.CharField(max_length=1)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['matiere'], name='matiere_idx')],
            },
        ),
        migrations.AddField(
            model_name='catalogue',
            name='matiere',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='competencecore.matiere'),
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(max_length=10)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['niveau'], name='niveau_idx')],
            },
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('datenaissance', models.DateField(blank=True, null=True)),
                ('professeurs', models.ManyToManyField(blank=True, related_name='eleves', to=settings.AUTH_USER_MODEL)),
                ('niveau', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='competencecore.niveau')),
            ],
        ),
        migrations.AddField(
            model_name='catalogue',
            name='niveau',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='competencecore.niveau'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='competencecore.eleve')),
                ('pdflayout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competencecore.pdflayout')),
                ('professeur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportCatalogue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalogue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competencecore.catalogue')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_catalogues', to='competencecore.report')),
            ],
        ),
        migrations.CreateModel(
            name='Resultat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('seuil1_percent', models.FloatField(default=0.0)),
                ('seuil2_percent', models.FloatField(default=0.0)),
                ('seuil3_percent', models.FloatField(default=0.0)),
                ('groupage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competencecore.groupagedata')),
                ('report_catalogue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultats', to='competencecore.reportcatalogue')),
            ],
        ),
        migrations.CreateModel(
            name='ResultatDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('scorelabel', models.CharField(blank=True, max_length=50, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competencecore.item')),
                ('resultat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultat_details', to='competencecore.resultat')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['description'], name='scorerule_description_idx')],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='scorerule',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='competencecore.scorerule'),
        ),
        migrations.CreateModel(
            name='ScoreRulePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scorelabel', models.CharField(max_length=20)),
                ('score', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('scorerule', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='points', to='competencecore.scorerule')),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('language', models.CharField(max_length=10)),
                ('translation', models.TextField()),
            ],
            options={
                'unique_together': {('key', 'language')},
            },
        ),
        migrations.AddIndex(
            model_name='groupagedata',
            index=models.Index(fields=['catalogue'], name='groupagedata_catalogue_idx'),
        ),
        migrations.AddIndex(
            model_name='eleve',
            index=models.Index(fields=['niveau'], name='eleve_niveau_idx'),
        ),
        migrations.AddIndex(
            model_name='catalogue',
            index=models.Index(fields=['niveau'], name='catalogue_niveau_idx'),
        ),
        migrations.AddIndex(
            model_name='catalogue',
            index=models.Index(fields=['etape'], name='catalogue_etape_idx'),
        ),
        migrations.AddIndex(
            model_name='catalogue',
            index=models.Index(fields=['annee'], name='catalogue_annee_idx'),
        ),
        migrations.AddIndex(
            model_name='catalogue',
            index=models.Index(fields=['matiere'], name='catalogue_matiere_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['eleve'], name='report_eleve_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['professeur'], name='report_professeur_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcatalogue',
            index=models.Index(fields=['report'], name='reportcatalogue_report_idx'),
        ),
        migrations.AddIndex(
            model_name='reportcatalogue',
            index=models.Index(fields=['catalogue'], name='reportcatalogue_catalogue_idx'),
        ),
        migrations.AddIndex(
            model_name='resultat',
            index=models.Index(fields=['report_catalogue'], name='resultat_report_catalogue_idx'),
        ),
        migrations.AddIndex(
            model_name='resultat',
            index=models.Index(fields=['groupage'], name='resultat_groupage_idx'),
        ),
        migrations.AddIndex(
            model_name='resultatdetail',
            index=models.Index(fields=['resultat'], name='resultatdetail_resultat_idx'),
        ),
        migrations.AddIndex(
            model_name='resultatdetail',
            index=models.Index(fields=['item'], name='resultatdetail_item_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['groupagedata'], name='item_groupagedata_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['scorerule'], name='item_scorerule_idx'),
        ),
        migrations.AddIndex(
            model_name='scorerulepoint',
            index=models.Index(fields=['scorerule'], name='scorerulepoint_scorerule_idx'),
        ),
    ]
