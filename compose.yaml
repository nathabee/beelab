name: beelab

x-django-env: &django_env
  DJANGO_SETTINGS_MODULE: config.settings
  SECRET_KEY: ${SECRET_KEY:-dev-insecure}
  DEBUG: ${DEBUG:-1}
  ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
  # add these if keeping the old settings.py style:
  DATABASE_NAME: ${POSTGRES_DB:-appdb}
  DATABASE_USER: ${POSTGRES_USER:-appuser}
  DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-apppwd}
  DATABASE_HOST: db
  DATABASE_PORT: "5432"
  BYPASS_MEDIA: ${BYPASS_MEDIA:-1}  
  WP_BASE_URL: ${WP_BASE_URL:-http://localhost:9082}
  DJANGO_BASE_URL: ${DJANGO_BASE_URL:-http://localhost:9001}
  WEB_BASE_URL: ${WEB_BASE_URL:-http://localhost:9080} 
  CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:9082,http://localhost:9080}
  CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-http://localhost:9082,http://localhost:9080}
  SESSION_COOKIE_SAMESITE: ${SESSION_COOKIE_SAMESITE:-None}
  CSRF_COOKIE_SAMESITE: ${CSRF_COOKIE_SAMESITE:-None}
  SESSION_COOKIE_SECURE: ${SESSION_COOKIE_SECURE:-False}
  CSRF_COOKIE_SECURE: ${CSRF_COOKIE_SECURE:-False}
  

x-db-env: &db_env
  POSTGRES_DB: ${POSTGRES_DB:-app}
  POSTGRES_USER: ${POSTGRES_USER:-app}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}

x-wp-env: &wp_env 
  WORDPRESS_DB_HOST: wpdb:3306
  WORDPRESS_DB_USER: ${WP_DB_USER:-wp}
  WORDPRESS_DB_PASSWORD: ${WP_DB_PASSWORD:-wp}
  WORDPRESS_DB_NAME: ${WP_DB_NAME:-wordpress}
  WORDPRESS_TABLE_PREFIX: ${WP_TABLE_PREFIX:-wp_}
  WORDPRESS_CONFIG_EXTRA: |
    // Only define if not already set (avoid "already defined" warnings)
    if (!defined('WP_DEBUG'))        define('WP_DEBUG', true);
    if (!defined('WP_DEBUG_LOG'))    define('WP_DEBUG_LOG', true);

    // Canonical public URLs (no port)
    if (!defined('WP_HOME'))         define('WP_HOME',    '${WP_BASE_URL}');
    if (!defined('WP_SITEURL'))      define('WP_SITEURL', '${WP_BASE_URL}');

    // Admin must be HTTPS
    if (!defined('FORCE_SSL_ADMIN')) define('FORCE_SSL_ADMIN', false);

    // Tell WP it’s HTTPS when coming via Apache TLS proxy
    if (isset($$_SERVER['HTTP_X_FORWARDED_PROTO']) && $$_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
      $$_SERVER['HTTPS']            = 'on';
      $$_SERVER['SERVER_PORT']      = 443;
      $$_SERVER['REQUEST_SCHEME']   = 'https';
      $$_SERVER['HTTP_X_FORWARDED_PORT'] = 443;
    }

    // (Optional) keep cookie domain/path simple in proxy setups
    if (!defined('COOKIE_DOMAIN'))   define('COOKIE_DOMAIN', '');
    if (!defined('COOKIEPATH'))      define('COOKIEPATH', '/');
    if (!defined('SITECOOKIEPATH'))  define('SITECOOKIEPATH', '/');
    if (!defined('ADMIN_COOKIE_PATH')) define('ADMIN_COOKIE_PATH', '/');

x-wpdb-env: &wpdb_env
  MYSQL_DATABASE: ${WP_DB_NAME:-wordpress}
  MYSQL_USER: ${WP_DB_USER:-wp}
  MYSQL_PASSWORD: ${WP_DB_PASSWORD:-wp}
  MYSQL_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD:-root}
  
# put this near your other x-* anchors:
x-wpcli-common: &wpcli_common
  image: wordpress:cli
  user: "33:33" 
  environment:
    WORDPRESS_DB_HOST: wpdb:3306
    WORDPRESS_DB_USER: ${WP_DB_USER:-wp}
    WORDPRESS_DB_PASSWORD: ${WP_DB_PASSWORD:-wp}
    WORDPRESS_DB_NAME: ${WP_DB_NAME:-wordpress}
  working_dir: /var/www/html
 
x-web-env: &web_env
  BACKEND_INTERNAL_URL: ${BACKEND_INTERNAL_URL:-http://django:8000}
  NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE:-http://localhost:9001}
  PORT: ${WEB_PORT:-3000}



services:
  # ---- services ----
  # DEV DJANGO
  django:
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    build: { context: ./django, target: dev }
    #container_name: beelab-api
    env_file: [.env.dev]
    environment:
      <<: *django_env
    depends_on:
      db: { condition: service_started }
    ports: ["127.0.0.1:9001:8000"]
    volumes: ["./django:/app:delegated"]
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8000/ready || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    profiles: ["dev"]

  # PROD DJANGO (no extends to avoid inheriting dev depends_on)
  django-prod:
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    build: { context: ./django, target: prod }
    #container_name: beelab-api-prod
    env_file: [.env.prod]
    environment:
      <<: *django_env
      DATABASE_HOST: db-prod             # ← point to prod DB
    depends_on:
      db-prod: { condition: service_started }
    ports: ["9001:8000"]
    #  persist media/static and keep them outside the image
    volumes:
      - django_media_prod:/app/media
      - django_static_prod:/app/staticfiles
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8000/ready || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    profiles: ["prod"]

  django-tests:
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    build: { context: ./django, target: test }   # <-- use test stage
    env_file: [.env.dev]
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      <<: *django_env
    depends_on:
      db: { condition: service_started }
    working_dir: /app
    command: pytest --cov=UserCore -q
    volumes:
      - ./django:/app:delegated
    profiles: ["test"]      

  # DEV WEB
  web:
    build: { context: ./web, target: dev }
    #container_name: beelab-web
    env_file: [.env.dev]
    environment:
      <<: *web_env
    depends_on:
      django: { condition: service_healthy }
    ports: ["127.0.0.1:9080:3000"]
    volumes:
      - ./web:/app:delegated
      - web_node_modules:/app/node_modules
    command: "npx next dev -H 0.0.0.0 -p 3000"
    profiles: ["dev"]

  # PROD WEB (explicit, no extends)
  web-prod:
    build: { context: ./web, target: prod }
    #container_name: beelab-web-prod
    env_file: [.env.prod]
    environment:
      <<: *web_env
      BACKEND_INTERNAL_URL: http://django-prod:8000
    depends_on:
      django-prod: { condition: service_healthy }
    ports: ["9080:3000"]
    volumes: []
    command: "npx next start -H 0.0.0.0 -p 3000"
    profiles: ["prod"]

  # DEV DB
  db:
    image: postgres:16
    #container_name: beelab-db
    environment: { <<: *db_env }
    volumes: [ db_data:/var/lib/postgresql/data ]
    profiles: ["dev","test"]

  # PROD DB (separate volume)
  db-prod:
    image: postgres:16
    #container_name: beelab-db-prod
    environment: { <<: *db_env }
    volumes: [ db_data_prod:/var/lib/postgresql/data ]
    profiles: ["prod"]

  # DEV WP
  wordpress:
    build: { context: ./wordpress }
    #container_name: beelab-wp
    env_file: [.env.dev]
    environment: { <<: *wp_env }
    depends_on:
      wpdb: { condition: service_healthy }
    ports: ["127.0.0.1:9082:80"]
    volumes:
      - wp_data:/var/www/html
      - ./wordpress/wp-content:/var/www/html/wp-content
      - ./django/media:/var/www/html/media:ro
      - ./django/staticfiles:/var/www/html/static:ro
    profiles: ["dev"]

  # PROD WP
  wordpress-prod:
    build: { context: ./wordpress }
    #container_name: beelab-wp-prod
    env_file: [.env.prod]
    environment:
      <<: *wp_env
      WORDPRESS_DB_HOST: wpdb-prod:3306   # ← point to prod MariaDB
    depends_on:
      wpdb-prod: { condition: service_healthy }
    ports: ["9082:80"]
    volumes: 
    - wp_data_prod:/var/www/html      
    - django_media_prod:/var/www/html/media:ro
    - django_static_prod:/var/www/html/static:ro
    pull_policy: never
    profiles: ["prod"]

  # DEV MariaDB
  wpdb:
    image: mariadb:11
    #container_name: beelab-wpdb
    env_file: [.env.dev]
    environment:
      MARIADB_DATABASE: ${WP_DB_NAME:-wordpress}
      MARIADB_USER: ${WP_DB_USER:-wp}
      MARIADB_PASSWORD: ${WP_DB_PASSWORD:-wp}
      MARIADB_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD:-root}
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -uroot -p$${MARIADB_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes: [ wp_db_data:/var/lib/mysql ]
    profiles: ["dev"]

  # PROD MariaDB (separate volume)
  wpdb-prod:
    image: mariadb:11
    #container_name: beelab-wpdb-prod
    env_file: [.env.prod]
    environment:
      MARIADB_DATABASE: ${WP_DB_NAME:-wordpress}
      MARIADB_USER: ${WP_DB_USER:-wp}
      MARIADB_PASSWORD: ${WP_DB_PASSWORD:-wp}
      MARIADB_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD:-root}
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -uroot -p$${MARIADB_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes: [ wp_db_data_prod:/var/lib/mysql ]
    profiles: ["prod"]

  # DEV CLI
  wpcli:
    <<: *wpcli_common
    volumes:
      - wp_data:/var/www/html
      - ./wordpress/wp-content:/var/www/html/wp-content
    depends_on:
      wordpress: { condition: service_started }
      wpdb: { condition: service_healthy }
    profiles: ["dev"]

  # PROD CLI
  wpcli-prod:
    <<: *wpcli_common
    environment:
      WORDPRESS_DB_HOST: wpdb-prod:3306    # override for prod
      WORDPRESS_DB_USER: ${WP_DB_USER:-wp}
      WORDPRESS_DB_PASSWORD: ${WP_DB_PASSWORD:-wp}
      WORDPRESS_DB_NAME: ${WP_DB_NAME:-wordpress}
    volumes:
      - wp_data_prod:/var/www/html
      # remove the bind below if you don't want editing from host in prod
      - ./wordpress/wp-content:/var/www/html/wp-content
    depends_on:
      wordpress-prod: { condition: service_started }
      wpdb-prod: { condition: service_healthy }
    profiles: ["prod"]

# ---- volumes ----
volumes:
  web_node_modules:
  db_data:
  db_data_prod:
  wp_db_data:
  wp_db_data_prod:
  wp_data:
  wp_data_prod:
  django_media_prod:      
  django_static_prod:    

 